
type TransactionResult = record {
    hash: text;
    status: text;
};

type Result = variant { Ok: text; Err : text };

type PublicKeyReply = record { public_key : blob };
type ResultKey = variant { Ok : PublicKeyReply; Err : text };
type Result_1 = variant { Ok : SignatureReply; Err : text };
type SignatureReply = record { signature : blob };

service : (text) -> {
    "execute_transaction": () -> (TransactionResult);
    "get_transactions": (text) -> (vec TransactionResult) query;
    "get_public_key" : () -> (ResultKey);
    "pubkey_bytes_to_address" : () -> (Result);
    "get_balance": () -> (Result);
    "get_address": (text) -> (text) query;
}

